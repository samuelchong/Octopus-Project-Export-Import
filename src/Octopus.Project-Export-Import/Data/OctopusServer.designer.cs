using System;
using System.ComponentModel;
using System.Data.Linq.Mapping;

#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Octopus.Common.Data
{
    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name="vbuoctopus")]
	public partial class OctopusServerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertRelease(Release instance);
    partial void UpdateRelease(Release instance);
    partial void DeleteRelease(Release instance);
    partial void InsertDeployment(Deployment instance);
    partial void UpdateDeployment(Deployment instance);
    partial void DeleteDeployment(Deployment instance);
    partial void InsertServerTask(ServerTask instance);
    partial void UpdateServerTask(ServerTask instance);
    partial void DeleteServerTask(ServerTask instance);
    partial void InsertVariableSet(VariableSet instance);
    partial void UpdateVariableSet(VariableSet instance);
    partial void DeleteVariableSet(VariableSet instance);
    partial void InsertConfiguration(Configuration instance);
    partial void UpdateConfiguration(Configuration instance);
    partial void DeleteConfiguration(Configuration instance);
    #endregion
			
		public OctopusServerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OctopusServerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OctopusServerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OctopusServerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Project> Projects
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<Release> Releases
		{
			get
			{
				return this.GetTable<Release>();
			}
		}
		
		public System.Data.Linq.Table<Deployment> Deployments
		{
			get
			{
				return this.GetTable<Deployment>();
			}
		}
		
		public System.Data.Linq.Table<ServerTask> ServerTasks
		{
			get
			{
				return this.GetTable<ServerTask>();
			}
		}
		
		public System.Data.Linq.Table<VariableSet> VariableSets
		{
			get
			{
				return this.GetTable<VariableSet>();
			}
		}
		
		public System.Data.Linq.Table<Configuration> Configurations
		{
			get
			{
				return this.GetTable<Configuration>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private string _Slug;
		
		private bool _IsDisabled;
		
		private string _VariableSetId;
		
		private string _DeploymentProcessId;
		
		private string _ProjectGroupId;
		
		private string _LifecycleId;
		
		private bool _AutoCreateRelease;
		
		private string _JSON;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSlugChanging(string value);
    partial void OnSlugChanged();
    partial void OnIsDisabledChanging(bool value);
    partial void OnIsDisabledChanged();
    partial void OnVariableSetIdChanging(string value);
    partial void OnVariableSetIdChanged();
    partial void OnDeploymentProcessIdChanging(string value);
    partial void OnDeploymentProcessIdChanged();
    partial void OnProjectGroupIdChanging(string value);
    partial void OnProjectGroupIdChanged();
    partial void OnLifecycleIdChanging(string value);
    partial void OnLifecycleIdChanged();
    partial void OnAutoCreateReleaseChanging(bool value);
    partial void OnAutoCreateReleaseChanged();
    partial void OnJSONChanging(string value);
    partial void OnJSONChanged();
    #endregion
		
		public Project()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slug", DbType="NVarChar(210) NOT NULL", CanBeNull=false)]
		public string Slug
		{
			get
			{
				return this._Slug;
			}
			set
			{
				if ((this._Slug != value))
				{
					this.OnSlugChanging(value);
					this.SendPropertyChanging();
					this._Slug = value;
					this.SendPropertyChanged("Slug");
					this.OnSlugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisabled", DbType="Bit NOT NULL")]
		public bool IsDisabled
		{
			get
			{
				return this._IsDisabled;
			}
			set
			{
				if ((this._IsDisabled != value))
				{
					this.OnIsDisabledChanging(value);
					this.SendPropertyChanging();
					this._IsDisabled = value;
					this.SendPropertyChanged("IsDisabled");
					this.OnIsDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariableSetId", DbType="NVarChar(50)")]
		public string VariableSetId
		{
			get
			{
				return this._VariableSetId;
			}
			set
			{
				if ((this._VariableSetId != value))
				{
					this.OnVariableSetIdChanging(value);
					this.SendPropertyChanging();
					this._VariableSetId = value;
					this.SendPropertyChanged("VariableSetId");
					this.OnVariableSetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeploymentProcessId", DbType="NVarChar(50)")]
		public string DeploymentProcessId
		{
			get
			{
				return this._DeploymentProcessId;
			}
			set
			{
				if ((this._DeploymentProcessId != value))
				{
					this.OnDeploymentProcessIdChanging(value);
					this.SendPropertyChanging();
					this._DeploymentProcessId = value;
					this.SendPropertyChanged("DeploymentProcessId");
					this.OnDeploymentProcessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectGroupId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectGroupId
		{
			get
			{
				return this._ProjectGroupId;
			}
			set
			{
				if ((this._ProjectGroupId != value))
				{
					this.OnProjectGroupIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectGroupId = value;
					this.SendPropertyChanged("ProjectGroupId");
					this.OnProjectGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LifecycleId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LifecycleId
		{
			get
			{
				return this._LifecycleId;
			}
			set
			{
				if ((this._LifecycleId != value))
				{
					this.OnLifecycleIdChanging(value);
					this.SendPropertyChanging();
					this._LifecycleId = value;
					this.SendPropertyChanged("LifecycleId");
					this.OnLifecycleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoCreateRelease", DbType="Bit NOT NULL")]
		public bool AutoCreateRelease
		{
			get
			{
				return this._AutoCreateRelease;
			}
			set
			{
				if ((this._AutoCreateRelease != value))
				{
					this.OnAutoCreateReleaseChanging(value);
					this.SendPropertyChanging();
					this._AutoCreateRelease = value;
					this.SendPropertyChanged("AutoCreateRelease");
					this.OnAutoCreateReleaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JSON", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string JSON
		{
			get
			{
				return this._JSON;
			}
			set
			{
				if ((this._JSON != value))
				{
					this.OnJSONChanging(value);
					this.SendPropertyChanging();
					this._JSON = value;
					this.SendPropertyChanged("JSON");
					this.OnJSONChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Release")]
	public partial class Release : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Version;
		
		private System.DateTimeOffset _Assembled;
		
		private string _ProjectId;
		
		private string _ProjectVariableSetSnapshotId;
		
		private string _ProjectDeploymentProcessSnapshotId;
		
		private string _JSON;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnAssembledChanging(System.DateTimeOffset value);
    partial void OnAssembledChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnProjectVariableSetSnapshotIdChanging(string value);
    partial void OnProjectVariableSetSnapshotIdChanged();
    partial void OnProjectDeploymentProcessSnapshotIdChanging(string value);
    partial void OnProjectDeploymentProcessSnapshotIdChanged();
    partial void OnJSONChanging(string value);
    partial void OnJSONChanged();
    #endregion
		
		public Release()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(150) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assembled", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset Assembled
		{
			get
			{
				return this._Assembled;
			}
			set
			{
				if ((this._Assembled != value))
				{
					this.OnAssembledChanging(value);
					this.SendPropertyChanging();
					this._Assembled = value;
					this.SendPropertyChanged("Assembled");
					this.OnAssembledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectVariableSetSnapshotId", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string ProjectVariableSetSnapshotId
		{
			get
			{
				return this._ProjectVariableSetSnapshotId;
			}
			set
			{
				if ((this._ProjectVariableSetSnapshotId != value))
				{
					this.OnProjectVariableSetSnapshotIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectVariableSetSnapshotId = value;
					this.SendPropertyChanged("ProjectVariableSetSnapshotId");
					this.OnProjectVariableSetSnapshotIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectDeploymentProcessSnapshotId", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string ProjectDeploymentProcessSnapshotId
		{
			get
			{
				return this._ProjectDeploymentProcessSnapshotId;
			}
			set
			{
				if ((this._ProjectDeploymentProcessSnapshotId != value))
				{
					this.OnProjectDeploymentProcessSnapshotIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectDeploymentProcessSnapshotId = value;
					this.SendPropertyChanged("ProjectDeploymentProcessSnapshotId");
					this.OnProjectDeploymentProcessSnapshotIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JSON", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string JSON
		{
			get
			{
				return this._JSON;
			}
			set
			{
				if ((this._JSON != value))
				{
					this.OnJSONChanging(value);
					this.SendPropertyChanging();
					this._JSON = value;
					this.SendPropertyChanged("JSON");
					this.OnJSONChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Deployment")]
	public partial class Deployment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private System.DateTimeOffset _Created;
		
		private string _EnvironmentId;
		
		private string _ProjectId;
		
		private string _ReleaseId;
		
		private string _ProjectGroupId;
		
		private string _TaskId;
		
		private string _JSON;
		
		private string _DeployedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedChanging(System.DateTimeOffset value);
    partial void OnCreatedChanged();
    partial void OnEnvironmentIdChanging(string value);
    partial void OnEnvironmentIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnReleaseIdChanging(string value);
    partial void OnReleaseIdChanged();
    partial void OnProjectGroupIdChanging(string value);
    partial void OnProjectGroupIdChanged();
    partial void OnTaskIdChanging(string value);
    partial void OnTaskIdChanged();
    partial void OnJSONChanging(string value);
    partial void OnJSONChanged();
    partial void OnDeployedByChanging(string value);
    partial void OnDeployedByChanged();
    #endregion
		
		public Deployment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EnvironmentId
		{
			get
			{
				return this._EnvironmentId;
			}
			set
			{
				if ((this._EnvironmentId != value))
				{
					this.OnEnvironmentIdChanging(value);
					this.SendPropertyChanging();
					this._EnvironmentId = value;
					this.SendPropertyChanged("EnvironmentId");
					this.OnEnvironmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ReleaseId
		{
			get
			{
				return this._ReleaseId;
			}
			set
			{
				if ((this._ReleaseId != value))
				{
					this.OnReleaseIdChanging(value);
					this.SendPropertyChanging();
					this._ReleaseId = value;
					this.SendPropertyChanged("ReleaseId");
					this.OnReleaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectGroupId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectGroupId
		{
			get
			{
				return this._ProjectGroupId;
			}
			set
			{
				if ((this._ProjectGroupId != value))
				{
					this.OnProjectGroupIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectGroupId = value;
					this.SendPropertyChanged("ProjectGroupId");
					this.OnProjectGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskId", DbType="NVarChar(50)")]
		public string TaskId
		{
			get
			{
				return this._TaskId;
			}
			set
			{
				if ((this._TaskId != value))
				{
					this.OnTaskIdChanging(value);
					this.SendPropertyChanging();
					this._TaskId = value;
					this.SendPropertyChanged("TaskId");
					this.OnTaskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JSON", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string JSON
		{
			get
			{
				return this._JSON;
			}
			set
			{
				if ((this._JSON != value))
				{
					this.OnJSONChanging(value);
					this.SendPropertyChanging();
					this._JSON = value;
					this.SendPropertyChanged("JSON");
					this.OnJSONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeployedBy", DbType="NVarChar(200)")]
		public string DeployedBy
		{
			get
			{
				return this._DeployedBy;
			}
			set
			{
				if ((this._DeployedBy != value))
				{
					this.OnDeployedByChanging(value);
					this.SendPropertyChanging();
					this._DeployedBy = value;
					this.SendPropertyChanged("DeployedBy");
					this.OnDeployedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServerTask")]
	public partial class ServerTask : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTimeOffset _QueueTime;
		
		private System.Nullable<System.DateTimeOffset> _StartTime;
		
		private System.Nullable<System.DateTimeOffset> _CompletedTime;
		
		private string _ErrorMessage;
		
		private string _ConcurrencyTag;
		
		private string _State;
		
		private bool _HasPendingInterruptions;
		
		private bool _HasWarningsOrErrors;
		
		private string _ServerNode;
		
		private string _ProjectId;
		
		private string _EnvironmentId;
		
		private string _JSON;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnQueueTimeChanging(System.DateTimeOffset value);
    partial void OnQueueTimeChanged();
    partial void OnStartTimeChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnStartTimeChanged();
    partial void OnCompletedTimeChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnCompletedTimeChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnConcurrencyTagChanging(string value);
    partial void OnConcurrencyTagChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnHasPendingInterruptionsChanging(bool value);
    partial void OnHasPendingInterruptionsChanged();
    partial void OnHasWarningsOrErrorsChanging(bool value);
    partial void OnHasWarningsOrErrorsChanged();
    partial void OnServerNodeChanging(string value);
    partial void OnServerNodeChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnEnvironmentIdChanging(string value);
    partial void OnEnvironmentIdChanged();
    partial void OnJSONChanging(string value);
    partial void OnJSONChanged();
    #endregion
		
		public ServerTask()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueueTime", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset QueueTime
		{
			get
			{
				return this._QueueTime;
			}
			set
			{
				if ((this._QueueTime != value))
				{
					this.OnQueueTimeChanging(value);
					this.SendPropertyChanging();
					this._QueueTime = value;
					this.SendPropertyChanged("QueueTime");
					this.OnQueueTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletedTime", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> CompletedTime
		{
			get
			{
				return this._CompletedTime;
			}
			set
			{
				if ((this._CompletedTime != value))
				{
					this.OnCompletedTimeChanging(value);
					this.SendPropertyChanging();
					this._CompletedTime = value;
					this.SendPropertyChanged("CompletedTime");
					this.OnCompletedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(MAX)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConcurrencyTag", DbType="NVarChar(100)")]
		public string ConcurrencyTag
		{
			get
			{
				return this._ConcurrencyTag;
			}
			set
			{
				if ((this._ConcurrencyTag != value))
				{
					this.OnConcurrencyTagChanging(value);
					this.SendPropertyChanging();
					this._ConcurrencyTag = value;
					this.SendPropertyChanged("ConcurrencyTag");
					this.OnConcurrencyTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasPendingInterruptions", DbType="Bit NOT NULL")]
		public bool HasPendingInterruptions
		{
			get
			{
				return this._HasPendingInterruptions;
			}
			set
			{
				if ((this._HasPendingInterruptions != value))
				{
					this.OnHasPendingInterruptionsChanging(value);
					this.SendPropertyChanging();
					this._HasPendingInterruptions = value;
					this.SendPropertyChanged("HasPendingInterruptions");
					this.OnHasPendingInterruptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasWarningsOrErrors", DbType="Bit NOT NULL")]
		public bool HasWarningsOrErrors
		{
			get
			{
				return this._HasWarningsOrErrors;
			}
			set
			{
				if ((this._HasWarningsOrErrors != value))
				{
					this.OnHasWarningsOrErrorsChanging(value);
					this.SendPropertyChanging();
					this._HasWarningsOrErrors = value;
					this.SendPropertyChanged("HasWarningsOrErrors");
					this.OnHasWarningsOrErrorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerNode", DbType="NVarChar(200)")]
		public string ServerNode
		{
			get
			{
				return this._ServerNode;
			}
			set
			{
				if ((this._ServerNode != value))
				{
					this.OnServerNodeChanging(value);
					this.SendPropertyChanging();
					this._ServerNode = value;
					this.SendPropertyChanged("ServerNode");
					this.OnServerNodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentId", DbType="NVarChar(50)")]
		public string EnvironmentId
		{
			get
			{
				return this._EnvironmentId;
			}
			set
			{
				if ((this._EnvironmentId != value))
				{
					this.OnEnvironmentIdChanging(value);
					this.SendPropertyChanging();
					this._EnvironmentId = value;
					this.SendPropertyChanged("EnvironmentId");
					this.OnEnvironmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JSON", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string JSON
		{
			get
			{
				return this._JSON;
			}
			set
			{
				if ((this._JSON != value))
				{
					this.OnJSONChanging(value);
					this.SendPropertyChanging();
					this._JSON = value;
					this.SendPropertyChanged("JSON");
					this.OnJSONChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VariableSet")]
	public partial class VariableSet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _OwnerId;
		
		private int _Version;
		
		private bool _IsFrozen;
		
		private string _JSON;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnOwnerIdChanging(string value);
    partial void OnOwnerIdChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnIsFrozenChanging(bool value);
    partial void OnIsFrozenChanged();
    partial void OnJSONChanging(string value);
    partial void OnJSONChanged();
    #endregion
		
		public VariableSet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(150) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerId", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string OwnerId
		{
			get
			{
				return this._OwnerId;
			}
			set
			{
				if ((this._OwnerId != value))
				{
					this.OnOwnerIdChanging(value);
					this.SendPropertyChanging();
					this._OwnerId = value;
					this.SendPropertyChanged("OwnerId");
					this.OnOwnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFrozen", DbType="Bit NOT NULL")]
		public bool IsFrozen
		{
			get
			{
				return this._IsFrozen;
			}
			set
			{
				if ((this._IsFrozen != value))
				{
					this.OnIsFrozenChanging(value);
					this.SendPropertyChanging();
					this._IsFrozen = value;
					this.SendPropertyChanged("IsFrozen");
					this.OnIsFrozenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JSON", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string JSON
		{
			get
			{
				return this._JSON;
			}
			set
			{
				if ((this._JSON != value))
				{
					this.OnJSONChanging(value);
					this.SendPropertyChanging();
					this._JSON = value;
					this.SendPropertyChanged("JSON");
					this.OnJSONChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Configuration")]
	public partial class Configuration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _JSON;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnJSONChanging(string value);
    partial void OnJSONChanged();
    #endregion
		
		public Configuration()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JSON", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string JSON
		{
			get
			{
				return this._JSON;
			}
			set
			{
				if ((this._JSON != value))
				{
					this.OnJSONChanging(value);
					this.SendPropertyChanging();
					this._JSON = value;
					this.SendPropertyChanged("JSON");
					this.OnJSONChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
